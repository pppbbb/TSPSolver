//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-19805474
// Cuda compilation tools, release 7.5, V7.5.16
// Based on LLVM 3.4svn
//

.version 4.3
.target sm_20
.address_size 64

	// .globl	CreateCreatures
// PrefixSumPrecalculate$__cuda_local_var_216456_36_non_const_sum has been demoted
// CalculateFinalPrefixSum$__cuda_local_var_216505_36_non_const_sum has been demoted

.visible .entry CreateCreatures(
	.param .u64 CreateCreatures_param_0,
	.param .u32 CreateCreatures_param_1,
	.param .u32 CreateCreatures_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [CreateCreatures_param_0];
	ld.param.u32 	%r3, [CreateCreatures_param_1];
	ld.param.u32 	%r2, [CreateCreatures_param_2];
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %tid.x;
	mad.lo.s32 	%r1, %r5, %r4, %r6;
	mul.lo.s32 	%r7, %r2, %r3;
	setp.ge.s32	%p1, %r1, %r7;
	@%p1 bra 	BB0_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	rem.s32 	%r8, %r1, %r2;
	st.global.u32 	[%rd4], %r8;

BB0_2:
	ret;
}

	// .globl	BitonicSortStep
.visible .entry BitonicSortStep(
	.param .u64 BitonicSortStep_param_0,
	.param .u64 BitonicSortStep_param_1,
	.param .u32 BitonicSortStep_param_2,
	.param .u32 BitonicSortStep_param_3
)
{
	.reg .pred 	%p<6>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd5, [BitonicSortStep_param_0];
	ld.param.u64 	%rd6, [BitonicSortStep_param_1];
	ld.param.u32 	%r9, [BitonicSortStep_param_2];
	ld.param.u32 	%r8, [BitonicSortStep_param_3];
	mov.u32 	%r10, %ctaid.x;
	mov.u32 	%r11, %ntid.x;
	mov.u32 	%r12, %tid.x;
	mad.lo.s32 	%r1, %r10, %r11, %r12;
	xor.b32  	%r2, %r1, %r9;
	setp.le.u32	%p1, %r2, %r1;
	@%p1 bra 	BB1_7;

	cvta.to.global.u64 	%rd7, %rd5;
	cvta.to.global.u64 	%rd8, %rd6;
	and.b32  	%r3, %r1, %r8;
	mul.wide.u32 	%rd9, %r1, 4;
	add.s64 	%rd1, %rd8, %rd9;
	mul.wide.u32 	%rd10, %r2, 4;
	add.s64 	%rd2, %rd8, %rd10;
	add.s64 	%rd3, %rd7, %rd9;
	add.s64 	%rd4, %rd7, %rd10;
	setp.ne.s32	%p2, %r3, 0;
	@%p2 bra 	BB1_4;

	ld.global.u32 	%r4, [%rd1];
	ld.global.u32 	%r5, [%rd2];
	setp.le.s32	%p3, %r4, %r5;
	@%p3 bra 	BB1_4;

	st.global.u32 	[%rd1], %r5;
	st.global.u32 	[%rd2], %r4;
	ld.global.u32 	%r13, [%rd3];
	ld.global.u32 	%r14, [%rd4];
	st.global.u32 	[%rd3], %r14;
	st.global.u32 	[%rd4], %r13;

BB1_4:
	setp.eq.s32	%p4, %r3, 0;
	@%p4 bra 	BB1_7;

	ld.global.u32 	%r6, [%rd1];
	ld.global.u32 	%r7, [%rd2];
	setp.ge.s32	%p5, %r6, %r7;
	@%p5 bra 	BB1_7;

	st.global.u32 	[%rd1], %r7;
	st.global.u32 	[%rd2], %r6;
	ld.global.u32 	%r15, [%rd3];
	ld.global.u32 	%r16, [%rd4];
	st.global.u32 	[%rd3], %r16;
	st.global.u32 	[%rd4], %r15;

BB1_7:
	ret;
}

	// .globl	WhichReverse
.visible .entry WhichReverse(
	.param .u64 WhichReverse_param_0,
	.param .u32 WhichReverse_param_1,
	.param .u32 WhichReverse_param_2,
	.param .u64 WhichReverse_param_3
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<13>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [WhichReverse_param_0];
	ld.param.u32 	%r2, [WhichReverse_param_1];
	ld.param.u32 	%r3, [WhichReverse_param_2];
	ld.param.u64 	%rd2, [WhichReverse_param_3];
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %tid.x;
	mad.lo.s32 	%r1, %r4, %r5, %r6;
	mul.lo.s32 	%r7, %r3, %r2;
	setp.ge.s32	%p1, %r1, %r7;
	@%p1 bra 	BB2_4;

	rem.s32 	%r8, %r1, %r2;
	setp.eq.s32	%p2, %r8, 0;
	@%p2 bra 	BB2_4;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u32 	%r9, [%rd5];
	ld.global.u32 	%r10, [%rd5+-4];
	setp.le.s32	%p3, %r10, %r9;
	@%p3 bra 	BB2_4;

	cvta.to.global.u64 	%rd6, %rd2;
	div.s32 	%r11, %r1, %r2;
	mul.wide.s32 	%rd7, %r11, 4;
	add.s64 	%rd8, %rd6, %rd7;
	mov.u32 	%r12, 1;
	st.global.u32 	[%rd8], %r12;

BB2_4:
	ret;
}

	// .globl	BitonicToAscendingOrder
.visible .entry BitonicToAscendingOrder(
	.param .u64 BitonicToAscendingOrder_param_0,
	.param .u64 BitonicToAscendingOrder_param_1,
	.param .u64 BitonicToAscendingOrder_param_2,
	.param .u32 BitonicToAscendingOrder_param_3,
	.param .u32 BitonicToAscendingOrder_param_4
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<22>;
	.reg .b64 	%rd<15>;


	ld.param.u64 	%rd1, [BitonicToAscendingOrder_param_0];
	ld.param.u64 	%rd2, [BitonicToAscendingOrder_param_1];
	ld.param.u64 	%rd3, [BitonicToAscendingOrder_param_2];
	ld.param.u32 	%r3, [BitonicToAscendingOrder_param_3];
	ld.param.u32 	%r4, [BitonicToAscendingOrder_param_4];
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r5, %r6, %r7;
	mul.lo.s32 	%r8, %r4, %r3;
	setp.ge.s32	%p1, %r1, %r8;
	@%p1 bra 	BB3_4;

	cvta.to.global.u64 	%rd4, %rd3;
	div.s32 	%r9, %r1, %r3;
	mul.wide.s32 	%rd5, %r9, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.u32 	%r10, [%rd6];
	setp.ne.s32	%p2, %r10, 1;
	@%p2 bra 	BB3_4;

	rem.s32 	%r2, %r1, %r3;
	shr.u32 	%r11, %r3, 31;
	add.s32 	%r12, %r3, %r11;
	shr.s32 	%r13, %r12, 1;
	setp.ge.s32	%p3, %r2, %r13;
	@%p3 bra 	BB3_4;

	cvta.to.global.u64 	%rd7, %rd2;
	cvta.to.global.u64 	%rd8, %rd1;
	shl.b32 	%r14, %r2, 1;
	add.s32 	%r15, %r3, %r1;
	add.s32 	%r16, %r15, -1;
	sub.s32 	%r17, %r16, %r14;
	mul.wide.s32 	%rd9, %r17, 4;
	add.s64 	%rd10, %rd8, %rd9;
	ld.global.u32 	%r18, [%rd10];
	mul.wide.s32 	%rd11, %r1, 4;
	add.s64 	%rd12, %rd8, %rd11;
	ld.global.u32 	%r19, [%rd12];
	st.global.u32 	[%rd10], %r19;
	st.global.u32 	[%rd12], %r18;
	add.s64 	%rd13, %rd7, %rd9;
	ld.global.u32 	%r20, [%rd13];
	add.s64 	%rd14, %rd7, %rd11;
	ld.global.u32 	%r21, [%rd14];
	st.global.u32 	[%rd13], %r21;
	st.global.u32 	[%rd14], %r20;

BB3_4:
	ret;
}

	// .globl	SetRandomRanks
.visible .entry SetRandomRanks(
	.param .u32 SetRandomRanks_param_0,
	.param .u64 SetRandomRanks_param_1,
	.param .u32 SetRandomRanks_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<8>;
	.reg .b64 	%rd<31>;


	ld.param.u32 	%r2, [SetRandomRanks_param_0];
	ld.param.u64 	%rd1, [SetRandomRanks_param_1];
	ld.param.u32 	%r3, [SetRandomRanks_param_2];
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %tid.x;
	mad.lo.s32 	%r1, %r5, %r4, %r6;
	setp.ge.s32	%p1, %r1, %r3;
	@%p1 bra 	BB4_2;

	add.s32 	%r7, %r1, 1;
	mul.wide.s32 	%rd2, %r7, %r2;
	mul.hi.s64 	%rd3, %rd2, 6084298725765134551;
	shr.u64 	%rd4, %rd3, 63;
	shr.s64 	%rd5, %rd3, 13;
	add.s64 	%rd6, %rd5, %rd4;
	mul.lo.s64 	%rd7, %rd6, 24837;
	sub.s64 	%rd8, %rd2, %rd7;
	mul.hi.s64 	%rd9, %rd2, 7046007714450909071;
	shr.u64 	%rd10, %rd9, 63;
	shr.s64 	%rd11, %rd9, 13;
	add.s64 	%rd12, %rd11, %rd10;
	mul.lo.s64 	%rd13, %rd12, 21447;
	sub.s64 	%rd14, %rd2, %rd13;
	add.s64 	%rd15, %rd14, %rd8;
	mul.hi.s64 	%rd16, %rd15, 879643565776221517;
	shr.u64 	%rd17, %rd16, 63;
	shr.s64 	%rd18, %rd16, 10;
	add.s64 	%rd19, %rd18, %rd17;
	mul.lo.s64 	%rd20, %rd19, 21474;
	sub.s64 	%rd21, %rd15, %rd20;
	mul.hi.s64 	%rd22, %rd21, 879643565776221517;
	shr.u64 	%rd23, %rd22, 63;
	shr.u64 	%rd24, %rd22, 10;
	add.s64 	%rd25, %rd24, %rd23;
	mul.lo.s64 	%rd26, %rd25, 21474;
	sub.s64 	%rd27, %rd21, %rd26;
	cvta.to.global.u64 	%rd28, %rd1;
	mul.wide.s32 	%rd29, %r1, 4;
	add.s64 	%rd30, %rd28, %rd29;
	st.global.u32 	[%rd30], %rd27;

BB4_2:
	ret;
}

	// .globl	SetMutationRanks
.visible .entry SetMutationRanks(
	.param .u64 SetMutationRanks_param_0,
	.param .u32 SetMutationRanks_param_1,
	.param .u32 SetMutationRanks_param_2,
	.param .u32 SetMutationRanks_param_3,
	.param .u32 SetMutationRanks_param_4,
	.param .u32 SetMutationRanks_param_5
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<42>;


	ld.param.u64 	%rd4, [SetMutationRanks_param_0];
	ld.param.u32 	%r2, [SetMutationRanks_param_1];
	ld.param.u32 	%r3, [SetMutationRanks_param_2];
	ld.param.u32 	%r4, [SetMutationRanks_param_3];
	ld.param.u32 	%r5, [SetMutationRanks_param_4];
	ld.param.u32 	%r6, [SetMutationRanks_param_5];
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %ntid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r8, %r7, %r9;
	mul.lo.s32 	%r10, %r6, %r5;
	setp.ge.s32	%p1, %r1, %r10;
	@%p1 bra 	BB5_4;

	add.s32 	%r11, %r1, 1;
	cvt.s64.s32	%rd1, %r2;
	mul.wide.s32 	%rd2, %r11, %r2;
	mul.hi.s64 	%rd5, %rd2, 2475878151099619919;
	shr.u64 	%rd6, %rd5, 63;
	shr.s64 	%rd7, %rd5, 28;
	add.s64 	%rd8, %rd7, %rd6;
	mul.lo.s64 	%rd9, %rd8, 2000001557;
	sub.s64 	%rd10, %rd2, %rd9;
	mul.lo.s64 	%rd11, %rd10, %rd10;
	shr.u64 	%rd12, %rd11, 9;
	mul.hi.u64 	%rd13, %rd12, 19342813113834067;
	shr.u64 	%rd14, %rd13, 11;
	mul.lo.s64 	%rd15, %rd14, 1000000000;
	sub.s64 	%rd16, %rd11, %rd15;
	cvt.u32.u64	%r12, %rd16;
	setp.lt.s32	%p2, %r12, %r3;
	cvta.to.global.u64 	%rd17, %rd4;
	mul.wide.s32 	%rd18, %r1, 4;
	add.s64 	%rd3, %rd17, %rd18;
	@%p2 bra 	BB5_3;
	bra.uni 	BB5_2;

BB5_3:
	mul.hi.s64 	%rd19, %rd2, -9223372032559808509;
	add.s64 	%rd20, %rd19, %rd2;
	shr.u64 	%rd21, %rd20, 63;
	shr.s64 	%rd22, %rd20, 30;
	add.s64 	%rd23, %rd22, %rd21;
	mul.lo.s64 	%rd24, %rd23, 2147483647;
	sub.s64 	%rd25, %rd2, %rd24;
	add.s64 	%rd26, %rd25, %rd25;
	mul.lo.s64 	%rd27, %rd26, %rd1;
	mul.hi.s64 	%rd28, %rd27, -9223372032559808509;
	add.s64 	%rd29, %rd28, %rd27;
	shr.u64 	%rd30, %rd29, 63;
	shr.s64 	%rd31, %rd29, 30;
	add.s64 	%rd32, %rd31, %rd30;
	mul.lo.s64 	%rd33, %rd32, 2147483647;
	sub.s64 	%rd34, %rd27, %rd33;
	mul.hi.s64 	%rd35, %rd34, -9223372032559808509;
	add.s64 	%rd36, %rd35, %rd34;
	shr.u64 	%rd37, %rd36, 63;
	shr.u64 	%rd38, %rd36, 30;
	add.s64 	%rd39, %rd38, %rd37;
	mul.lo.s64 	%rd40, %rd39, 2147483647;
	sub.s64 	%rd41, %rd34, %rd40;
	st.global.u32 	[%rd3], %rd41;
	bra.uni 	BB5_4;

BB5_2:
	rem.s32 	%r13, %r1, %r5;
	mul.lo.s32 	%r14, %r13, %r4;
	st.global.u32 	[%rd3], %r14;

BB5_4:
	ret;
}

	// .globl	SetValue
.visible .entry SetValue(
	.param .u64 SetValue_param_0,
	.param .u32 SetValue_param_1,
	.param .u32 SetValue_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [SetValue_param_0];
	ld.param.u32 	%r3, [SetValue_param_1];
	ld.param.u32 	%r2, [SetValue_param_2];
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %tid.x;
	mad.lo.s32 	%r1, %r5, %r4, %r6;
	setp.ge.s32	%p1, %r1, %r3;
	@%p1 bra 	BB6_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	st.global.u32 	[%rd4], %r2;

BB6_2:
	ret;
}

	// .globl	AssignHalfPopulation
.visible .entry AssignHalfPopulation(
	.param .u64 AssignHalfPopulation_param_0,
	.param .u64 AssignHalfPopulation_param_1,
	.param .u32 AssignHalfPopulation_param_2,
	.param .u32 AssignHalfPopulation_param_3,
	.param .u32 AssignHalfPopulation_param_4,
	.param .u64 AssignHalfPopulation_param_5
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<22>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd1, [AssignHalfPopulation_param_0];
	ld.param.u64 	%rd2, [AssignHalfPopulation_param_1];
	ld.param.u32 	%r3, [AssignHalfPopulation_param_2];
	ld.param.u32 	%r4, [AssignHalfPopulation_param_3];
	ld.param.u32 	%r5, [AssignHalfPopulation_param_4];
	ld.param.u64 	%rd3, [AssignHalfPopulation_param_5];
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	mul.lo.s32 	%r9, %r3, %r3;
	mul.lo.s32 	%r10, %r9, %r4;
	setp.ge.s32	%p1, %r1, %r10;
	@%p1 bra 	BB7_3;

	rem.s32 	%r2, %r1, %r4;
	shr.u32 	%r11, %r4, 31;
	add.s32 	%r12, %r4, %r11;
	shr.s32 	%r13, %r12, 1;
	setp.ge.s32	%p2, %r2, %r13;
	@%p2 bra 	BB7_3;

	cvta.to.global.u64 	%rd4, %rd3;
	cvta.to.global.u64 	%rd5, %rd2;
	cvta.to.global.u64 	%rd6, %rd1;
	mul.lo.s32 	%r14, %r4, %r3;
	div.s32 	%r15, %r1, %r14;
	add.s32 	%r16, %r2, %r5;
	mad.lo.s32 	%r17, %r15, %r4, %r16;
	mul.wide.s32 	%rd7, %r17, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.u32 	%r18, [%rd8];
	mul.wide.s32 	%rd9, %r1, 4;
	add.s64 	%rd10, %rd5, %rd9;
	st.global.u32 	[%rd10], %r18;
	sub.s32 	%r19, %r1, %r2;
	add.s32 	%r20, %r19, %r18;
	mul.wide.s32 	%rd11, %r20, 4;
	add.s64 	%rd12, %rd4, %rd11;
	mov.u32 	%r21, 0;
	st.global.u32 	[%rd12], %r21;

BB7_3:
	ret;
}

	// .globl	FindMissingGens
.visible .entry FindMissingGens(
	.param .u64 FindMissingGens_param_0,
	.param .u64 FindMissingGens_param_1,
	.param .u64 FindMissingGens_param_2,
	.param .u32 FindMissingGens_param_3,
	.param .u32 FindMissingGens_param_4
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd2, [FindMissingGens_param_0];
	ld.param.u64 	%rd3, [FindMissingGens_param_1];
	ld.param.u64 	%rd4, [FindMissingGens_param_2];
	ld.param.u32 	%r2, [FindMissingGens_param_3];
	ld.param.u32 	%r3, [FindMissingGens_param_4];
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %tid.x;
	mad.lo.s32 	%r1, %r5, %r4, %r6;
	mul.lo.s32 	%r7, %r2, %r2;
	mul.lo.s32 	%r8, %r7, %r3;
	setp.ge.s32	%p1, %r1, %r8;
	@%p1 bra 	BB8_4;

	cvta.to.global.u64 	%rd5, %rd2;
	rem.s32 	%r9, %r1, %r3;
	sub.s32 	%r10, %r1, %r9;
	mul.lo.s32 	%r11, %r3, %r2;
	rem.s32 	%r12, %r1, %r11;
	mul.wide.s32 	%rd6, %r12, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.u32 	%r13, [%rd7];
	add.s32 	%r14, %r10, %r13;
	cvta.to.global.u64 	%rd8, %rd3;
	mul.wide.s32 	%rd9, %r14, 4;
	add.s64 	%rd10, %rd8, %rd9;
	ld.global.u32 	%r15, [%rd10];
	setp.eq.s32	%p2, %r15, 1;
	cvta.to.global.u64 	%rd11, %rd4;
	mul.wide.s32 	%rd12, %r1, 4;
	add.s64 	%rd1, %rd11, %rd12;
	@%p2 bra 	BB8_3;
	bra.uni 	BB8_2;

BB8_3:
	mov.u32 	%r17, 1;
	st.global.u32 	[%rd1], %r17;
	bra.uni 	BB8_4;

BB8_2:
	mov.u32 	%r16, 0;
	st.global.u32 	[%rd1], %r16;

BB8_4:
	ret;
}

	// .globl	FillRestPopulation
.visible .entry FillRestPopulation(
	.param .u64 FillRestPopulation_param_0,
	.param .u64 FillRestPopulation_param_1,
	.param .u64 FillRestPopulation_param_2,
	.param .u32 FillRestPopulation_param_3,
	.param .u32 FillRestPopulation_param_4,
	.param .u32 FillRestPopulation_param_5
)
{
	.reg .pred 	%p<5>;
	.reg .b32 	%r<24>;
	.reg .b64 	%rd<17>;


	ld.param.u64 	%rd5, [FillRestPopulation_param_0];
	ld.param.u64 	%rd6, [FillRestPopulation_param_1];
	ld.param.u64 	%rd4, [FillRestPopulation_param_2];
	ld.param.u32 	%r5, [FillRestPopulation_param_3];
	ld.param.u32 	%r6, [FillRestPopulation_param_4];
	ld.param.u32 	%r7, [FillRestPopulation_param_5];
	cvta.to.global.u64 	%rd1, %rd6;
	cvta.to.global.u64 	%rd2, %rd5;
	mov.u32 	%r8, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r1, %r8, %r9, %r10;
	rem.s32 	%r2, %r1, %r6;
	sub.s32 	%r11, %r1, %r2;
	add.s32 	%r3, %r11, %r7;
	mul.lo.s32 	%r12, %r5, %r5;
	mul.lo.s32 	%r13, %r12, %r6;
	setp.ge.s32	%p1, %r1, %r13;
	@%p1 bra 	BB9_6;

	cvta.to.global.u64 	%rd7, %rd4;
	setp.eq.s32	%p2, %r2, 0;
	mul.wide.s32 	%rd8, %r1, 4;
	add.s64 	%rd3, %rd7, %rd8;
	@%p2 bra 	BB9_4;

	ld.global.u32 	%r4, [%rd3];
	ld.global.u32 	%r14, [%rd3+-4];
	setp.ge.s32	%p3, %r14, %r4;
	@%p3 bra 	BB9_6;

	mul.lo.s32 	%r15, %r6, %r5;
	rem.s32 	%r16, %r1, %r15;
	mul.wide.s32 	%rd9, %r16, 4;
	add.s64 	%rd10, %rd2, %rd9;
	ld.global.u32 	%r17, [%rd10];
	add.s32 	%r18, %r4, %r3;
	mul.wide.s32 	%rd11, %r18, 4;
	add.s64 	%rd12, %rd1, %rd11;
	st.global.u32 	[%rd12], %r17;
	bra.uni 	BB9_6;

BB9_4:
	ld.global.u32 	%r19, [%rd3];
	setp.ne.s32	%p4, %r19, 1;
	@%p4 bra 	BB9_6;

	mul.lo.s32 	%r20, %r6, %r5;
	rem.s32 	%r21, %r1, %r20;
	mul.wide.s32 	%rd13, %r21, 4;
	add.s64 	%rd14, %rd2, %rd13;
	ld.global.u32 	%r22, [%rd14];
	add.s32 	%r23, %r3, 1;
	mul.wide.s32 	%rd15, %r23, 4;
	add.s64 	%rd16, %rd1, %rd15;
	st.global.u32 	[%rd16], %r22;

BB9_6:
	ret;
}

	// .globl	PrefixSumPrecalculate
.visible .entry PrefixSumPrecalculate(
	.param .u64 PrefixSumPrecalculate_param_0,
	.param .u64 PrefixSumPrecalculate_param_1,
	.param .u32 PrefixSumPrecalculate_param_2,
	.param .u32 PrefixSumPrecalculate_param_3
)
{
	.reg .pred 	%p<13>;
	.reg .b32 	%r<85>;
	.reg .b64 	%rd<42>;
	// demoted variable
	.shared .align 4 .b8 PrefixSumPrecalculate$__cuda_local_var_216456_36_non_const_sum[4096];

	ld.param.u64 	%rd2, [PrefixSumPrecalculate_param_0];
	ld.param.u64 	%rd3, [PrefixSumPrecalculate_param_1];
	ld.param.u32 	%r26, [PrefixSumPrecalculate_param_2];
	ld.param.u32 	%r27, [PrefixSumPrecalculate_param_3];
	mov.u32 	%r1, %ctaid.x;
	rem.u32 	%r29, %r1, %r27;
	mov.u32 	%r30, %ntid.x;
	mov.u32 	%r2, %tid.x;
	mad.lo.s32 	%r3, %r30, %r29, %r2;
	mov.u32 	%r74, 0;
	setp.ge.s32	%p1, %r3, %r26;
	@%p1 bra 	BB10_2;

	div.u32 	%r31, %r1, %r27;
	mad.lo.s32 	%r32, %r31, %r26, %r3;
	cvta.to.global.u64 	%rd4, %rd2;
	mul.wide.s32 	%rd5, %r32, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.u32 	%r74, [%rd6];

BB10_2:
	mul.wide.u32 	%rd7, %r2, 4;
	mov.u64 	%rd8, PrefixSumPrecalculate$__cuda_local_var_216456_36_non_const_sum;
	add.s64 	%rd1, %rd8, %rd7;
	st.shared.u32 	[%rd1], %r74;
	bar.sync 	0;
	setp.eq.s32	%p2, %r2, 0;
	mov.u32 	%r75, 0;
	@%p2 bra 	BB10_4;

	add.s32 	%r34, %r2, -1;
	mul.wide.u32 	%rd9, %r34, 4;
	add.s64 	%rd11, %rd8, %rd9;
	ld.shared.u32 	%r75, [%rd11];

BB10_4:
	bar.sync 	0;
	ld.shared.u32 	%r35, [%rd1];
	add.s32 	%r36, %r35, %r75;
	st.shared.u32 	[%rd1], %r36;
	bar.sync 	0;
	setp.lt.u32	%p3, %r2, 2;
	mov.u32 	%r76, 0;
	@%p3 bra 	BB10_6;

	add.s32 	%r38, %r2, -2;
	mul.wide.u32 	%rd12, %r38, 4;
	add.s64 	%rd14, %rd8, %rd12;
	ld.shared.u32 	%r76, [%rd14];

BB10_6:
	bar.sync 	0;
	ld.shared.u32 	%r39, [%rd1];
	add.s32 	%r40, %r39, %r76;
	st.shared.u32 	[%rd1], %r40;
	bar.sync 	0;
	setp.lt.u32	%p4, %r2, 4;
	mov.u32 	%r77, 0;
	@%p4 bra 	BB10_8;

	add.s32 	%r42, %r2, -4;
	mul.wide.u32 	%rd15, %r42, 4;
	add.s64 	%rd17, %rd8, %rd15;
	ld.shared.u32 	%r77, [%rd17];

BB10_8:
	bar.sync 	0;
	ld.shared.u32 	%r43, [%rd1];
	add.s32 	%r44, %r43, %r77;
	st.shared.u32 	[%rd1], %r44;
	bar.sync 	0;
	setp.lt.u32	%p5, %r2, 8;
	mov.u32 	%r78, 0;
	@%p5 bra 	BB10_10;

	add.s32 	%r46, %r2, -8;
	mul.wide.u32 	%rd18, %r46, 4;
	add.s64 	%rd20, %rd8, %rd18;
	ld.shared.u32 	%r78, [%rd20];

BB10_10:
	bar.sync 	0;
	ld.shared.u32 	%r47, [%rd1];
	add.s32 	%r48, %r47, %r78;
	st.shared.u32 	[%rd1], %r48;
	bar.sync 	0;
	setp.lt.u32	%p6, %r2, 16;
	mov.u32 	%r79, 0;
	@%p6 bra 	BB10_12;

	add.s32 	%r50, %r2, -16;
	mul.wide.u32 	%rd21, %r50, 4;
	add.s64 	%rd23, %rd8, %rd21;
	ld.shared.u32 	%r79, [%rd23];

BB10_12:
	bar.sync 	0;
	ld.shared.u32 	%r51, [%rd1];
	add.s32 	%r52, %r51, %r79;
	st.shared.u32 	[%rd1], %r52;
	bar.sync 	0;
	setp.lt.u32	%p7, %r2, 32;
	mov.u32 	%r80, 0;
	@%p7 bra 	BB10_14;

	add.s32 	%r54, %r2, -32;
	mul.wide.u32 	%rd24, %r54, 4;
	add.s64 	%rd26, %rd8, %rd24;
	ld.shared.u32 	%r80, [%rd26];

BB10_14:
	bar.sync 	0;
	ld.shared.u32 	%r55, [%rd1];
	add.s32 	%r56, %r55, %r80;
	st.shared.u32 	[%rd1], %r56;
	bar.sync 	0;
	setp.lt.u32	%p8, %r2, 64;
	mov.u32 	%r81, 0;
	@%p8 bra 	BB10_16;

	add.s32 	%r58, %r2, -64;
	mul.wide.u32 	%rd27, %r58, 4;
	add.s64 	%rd29, %rd8, %rd27;
	ld.shared.u32 	%r81, [%rd29];

BB10_16:
	bar.sync 	0;
	ld.shared.u32 	%r59, [%rd1];
	add.s32 	%r60, %r59, %r81;
	st.shared.u32 	[%rd1], %r60;
	bar.sync 	0;
	setp.lt.u32	%p9, %r2, 128;
	mov.u32 	%r82, 0;
	@%p9 bra 	BB10_18;

	add.s32 	%r62, %r2, -128;
	mul.wide.u32 	%rd30, %r62, 4;
	add.s64 	%rd32, %rd8, %rd30;
	ld.shared.u32 	%r82, [%rd32];

BB10_18:
	bar.sync 	0;
	ld.shared.u32 	%r63, [%rd1];
	add.s32 	%r64, %r63, %r82;
	st.shared.u32 	[%rd1], %r64;
	bar.sync 	0;
	setp.lt.u32	%p10, %r2, 256;
	mov.u32 	%r83, 0;
	@%p10 bra 	BB10_20;

	add.s32 	%r66, %r2, -256;
	mul.wide.u32 	%rd33, %r66, 4;
	add.s64 	%rd35, %rd8, %rd33;
	ld.shared.u32 	%r83, [%rd35];

BB10_20:
	bar.sync 	0;
	ld.shared.u32 	%r67, [%rd1];
	add.s32 	%r68, %r67, %r83;
	st.shared.u32 	[%rd1], %r68;
	bar.sync 	0;
	setp.lt.u32	%p11, %r2, 512;
	mov.u32 	%r84, 0;
	@%p11 bra 	BB10_22;

	add.s32 	%r70, %r2, -512;
	mul.wide.u32 	%rd36, %r70, 4;
	add.s64 	%rd38, %rd8, %rd36;
	ld.shared.u32 	%r84, [%rd38];

BB10_22:
	bar.sync 	0;
	ld.shared.u32 	%r71, [%rd1];
	add.s32 	%r72, %r71, %r84;
	st.shared.u32 	[%rd1], %r72;
	bar.sync 	0;
	setp.ne.s32	%p12, %r2, 0;
	@%p12 bra 	BB10_24;

	cvta.to.global.u64 	%rd39, %rd3;
	ld.shared.u32 	%r73, [PrefixSumPrecalculate$__cuda_local_var_216456_36_non_const_sum+4092];
	mul.wide.u32 	%rd40, %r1, 4;
	add.s64 	%rd41, %rd39, %rd40;
	st.global.u32 	[%rd41], %r73;

BB10_24:
	ret;
}

	// .globl	CalculateBlocksPrefixSum
.visible .entry CalculateBlocksPrefixSum(
	.param .u64 CalculateBlocksPrefixSum_param_0,
	.param .u64 CalculateBlocksPrefixSum_param_1,
	.param .u32 CalculateBlocksPrefixSum_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<20>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd3, [CalculateBlocksPrefixSum_param_0];
	ld.param.u64 	%rd4, [CalculateBlocksPrefixSum_param_1];
	ld.param.u32 	%r10, [CalculateBlocksPrefixSum_param_2];
	cvta.to.global.u64 	%rd1, %rd4;
	mov.u32 	%r11, %tid.x;
	setp.ne.s32	%p1, %r11, 0;
	@%p1 bra 	BB11_4;

	mov.u32 	%r12, %ctaid.x;
	add.s32 	%r13, %r12, 1;
	mul.lo.s32 	%r1, %r13, %r10;
	mul.lo.s32 	%r18, %r12, %r10;
	mul.wide.u32 	%rd5, %r18, 4;
	add.s64 	%rd6, %rd1, %rd5;
	mov.u32 	%r14, 0;
	st.global.u32 	[%rd6], %r14;
	add.s32 	%r19, %r18, 1;
	setp.ge.s32	%p2, %r19, %r1;
	@%p2 bra 	BB11_4;

	cvta.to.global.u64 	%rd2, %rd3;
	mul.wide.s32 	%rd7, %r18, 4;
	add.s64 	%rd8, %rd1, %rd7;
	ld.global.u32 	%r16, [%rd8];

BB11_3:
	mov.u32 	%r7, %r18;
	mov.u32 	%r18, %r19;
	mul.wide.s32 	%rd9, %r7, 4;
	add.s64 	%rd10, %rd2, %rd9;
	ld.global.u32 	%r15, [%rd10];
	add.s32 	%r16, %r15, %r16;
	mul.wide.s32 	%rd11, %r18, 4;
	add.s64 	%rd12, %rd1, %rd11;
	st.global.u32 	[%rd12], %r16;
	add.s32 	%r19, %r18, 1;
	setp.lt.s32	%p3, %r19, %r1;
	@%p3 bra 	BB11_3;

BB11_4:
	ret;
}

	// .globl	CalculateFinalPrefixSum
.visible .entry CalculateFinalPrefixSum(
	.param .u64 CalculateFinalPrefixSum_param_0,
	.param .u64 CalculateFinalPrefixSum_param_1,
	.param .u32 CalculateFinalPrefixSum_param_2,
	.param .u32 CalculateFinalPrefixSum_param_3
)
{
	.reg .pred 	%p<14>;
	.reg .b32 	%r<88>;
	.reg .b64 	%rd<45>;
	// demoted variable
	.shared .align 4 .b8 CalculateFinalPrefixSum$__cuda_local_var_216505_36_non_const_sum[4096];

	ld.param.u64 	%rd4, [CalculateFinalPrefixSum_param_0];
	ld.param.u64 	%rd3, [CalculateFinalPrefixSum_param_1];
	ld.param.u32 	%r26, [CalculateFinalPrefixSum_param_2];
	ld.param.u32 	%r28, [CalculateFinalPrefixSum_param_3];
	mov.u32 	%r1, %ctaid.x;
	div.u32 	%r29, %r1, %r28;
	rem.u32 	%r30, %r1, %r28;
	mov.u32 	%r31, %ntid.x;
	mov.u32 	%r2, %tid.x;
	mad.lo.s32 	%r3, %r31, %r30, %r2;
	mad.lo.s32 	%r32, %r29, %r26, %r3;
	cvta.to.global.u64 	%rd5, %rd4;
	mul.wide.s32 	%rd6, %r32, 4;
	add.s64 	%rd1, %rd5, %rd6;
	mov.u32 	%r77, 0;
	setp.ge.s32	%p2, %r3, %r26;
	@%p2 bra 	BB12_2;

	ld.global.u32 	%r77, [%rd1];

BB12_2:
	mul.wide.u32 	%rd7, %r2, 4;
	mov.u64 	%rd8, CalculateFinalPrefixSum$__cuda_local_var_216505_36_non_const_sum;
	add.s64 	%rd2, %rd8, %rd7;
	st.shared.u32 	[%rd2], %r77;
	setp.ne.s32	%p3, %r2, 0;
	@%p3 bra 	BB12_4;

	cvta.to.global.u64 	%rd9, %rd3;
	mul.wide.u32 	%rd10, %r1, 4;
	add.s64 	%rd11, %rd9, %rd10;
	ld.shared.u32 	%r33, [CalculateFinalPrefixSum$__cuda_local_var_216505_36_non_const_sum];
	ldu.global.u32 	%r34, [%rd11];
	add.s32 	%r35, %r33, %r34;
	st.shared.u32 	[CalculateFinalPrefixSum$__cuda_local_var_216505_36_non_const_sum], %r35;

BB12_4:
	setp.eq.s32	%p1, %r2, 0;
	bar.sync 	0;
	mov.u32 	%r78, 0;
	@%p1 bra 	BB12_6;

	add.s32 	%r37, %r2, -1;
	mul.wide.u32 	%rd12, %r37, 4;
	add.s64 	%rd14, %rd8, %rd12;
	ld.shared.u32 	%r78, [%rd14];

BB12_6:
	bar.sync 	0;
	ld.shared.u32 	%r38, [%rd2];
	add.s32 	%r39, %r38, %r78;
	st.shared.u32 	[%rd2], %r39;
	bar.sync 	0;
	setp.lt.u32	%p4, %r2, 2;
	mov.u32 	%r79, 0;
	@%p4 bra 	BB12_8;

	add.s32 	%r41, %r2, -2;
	mul.wide.u32 	%rd15, %r41, 4;
	add.s64 	%rd17, %rd8, %rd15;
	ld.shared.u32 	%r79, [%rd17];

BB12_8:
	bar.sync 	0;
	ld.shared.u32 	%r42, [%rd2];
	add.s32 	%r43, %r42, %r79;
	st.shared.u32 	[%rd2], %r43;
	bar.sync 	0;
	setp.lt.u32	%p5, %r2, 4;
	mov.u32 	%r80, 0;
	@%p5 bra 	BB12_10;

	add.s32 	%r45, %r2, -4;
	mul.wide.u32 	%rd18, %r45, 4;
	add.s64 	%rd20, %rd8, %rd18;
	ld.shared.u32 	%r80, [%rd20];

BB12_10:
	bar.sync 	0;
	ld.shared.u32 	%r46, [%rd2];
	add.s32 	%r47, %r46, %r80;
	st.shared.u32 	[%rd2], %r47;
	bar.sync 	0;
	setp.lt.u32	%p6, %r2, 8;
	mov.u32 	%r81, 0;
	@%p6 bra 	BB12_12;

	add.s32 	%r49, %r2, -8;
	mul.wide.u32 	%rd21, %r49, 4;
	add.s64 	%rd23, %rd8, %rd21;
	ld.shared.u32 	%r81, [%rd23];

BB12_12:
	bar.sync 	0;
	ld.shared.u32 	%r50, [%rd2];
	add.s32 	%r51, %r50, %r81;
	st.shared.u32 	[%rd2], %r51;
	bar.sync 	0;
	setp.lt.u32	%p7, %r2, 16;
	mov.u32 	%r82, 0;
	@%p7 bra 	BB12_14;

	add.s32 	%r53, %r2, -16;
	mul.wide.u32 	%rd24, %r53, 4;
	add.s64 	%rd26, %rd8, %rd24;
	ld.shared.u32 	%r82, [%rd26];

BB12_14:
	bar.sync 	0;
	ld.shared.u32 	%r54, [%rd2];
	add.s32 	%r55, %r54, %r82;
	st.shared.u32 	[%rd2], %r55;
	bar.sync 	0;
	setp.lt.u32	%p8, %r2, 32;
	mov.u32 	%r83, 0;
	@%p8 bra 	BB12_16;

	add.s32 	%r57, %r2, -32;
	mul.wide.u32 	%rd27, %r57, 4;
	add.s64 	%rd29, %rd8, %rd27;
	ld.shared.u32 	%r83, [%rd29];

BB12_16:
	bar.sync 	0;
	ld.shared.u32 	%r58, [%rd2];
	add.s32 	%r59, %r58, %r83;
	st.shared.u32 	[%rd2], %r59;
	bar.sync 	0;
	setp.lt.u32	%p9, %r2, 64;
	mov.u32 	%r84, 0;
	@%p9 bra 	BB12_18;

	add.s32 	%r61, %r2, -64;
	mul.wide.u32 	%rd30, %r61, 4;
	add.s64 	%rd32, %rd8, %rd30;
	ld.shared.u32 	%r84, [%rd32];

BB12_18:
	bar.sync 	0;
	ld.shared.u32 	%r62, [%rd2];
	add.s32 	%r63, %r62, %r84;
	st.shared.u32 	[%rd2], %r63;
	bar.sync 	0;
	setp.lt.u32	%p10, %r2, 128;
	mov.u32 	%r85, 0;
	@%p10 bra 	BB12_20;

	add.s32 	%r65, %r2, -128;
	mul.wide.u32 	%rd33, %r65, 4;
	add.s64 	%rd35, %rd8, %rd33;
	ld.shared.u32 	%r85, [%rd35];

BB12_20:
	bar.sync 	0;
	ld.shared.u32 	%r66, [%rd2];
	add.s32 	%r67, %r66, %r85;
	st.shared.u32 	[%rd2], %r67;
	bar.sync 	0;
	setp.lt.u32	%p11, %r2, 256;
	mov.u32 	%r86, 0;
	@%p11 bra 	BB12_22;

	add.s32 	%r69, %r2, -256;
	mul.wide.u32 	%rd36, %r69, 4;
	add.s64 	%rd38, %rd8, %rd36;
	ld.shared.u32 	%r86, [%rd38];

BB12_22:
	bar.sync 	0;
	ld.shared.u32 	%r70, [%rd2];
	add.s32 	%r71, %r70, %r86;
	st.shared.u32 	[%rd2], %r71;
	bar.sync 	0;
	setp.lt.u32	%p12, %r2, 512;
	mov.u32 	%r87, 0;
	@%p12 bra 	BB12_24;

	add.s32 	%r73, %r2, -512;
	mul.wide.u32 	%rd39, %r73, 4;
	add.s64 	%rd41, %rd8, %rd39;
	ld.shared.u32 	%r87, [%rd41];

BB12_24:
	bar.sync 	0;
	ld.shared.u32 	%r74, [%rd2];
	add.s32 	%r75, %r74, %r87;
	st.shared.u32 	[%rd2], %r75;
	bar.sync 	0;
	@%p2 bra 	BB12_26;

	mul.wide.s32 	%rd42, %r3, 4;
	add.s64 	%rd44, %rd8, %rd42;
	ld.shared.u32 	%r76, [%rd44];
	st.global.u32 	[%rd1], %r76;

BB12_26:
	ret;
}

	// .globl	SetPathWeight
.visible .entry SetPathWeight(
	.param .u64 SetPathWeight_param_0,
	.param .u64 SetPathWeight_param_1,
	.param .u64 SetPathWeight_param_2,
	.param .u32 SetPathWeight_param_3,
	.param .u32 SetPathWeight_param_4
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<14>;


	ld.param.u64 	%rd1, [SetPathWeight_param_0];
	ld.param.u64 	%rd2, [SetPathWeight_param_1];
	ld.param.u64 	%rd3, [SetPathWeight_param_2];
	ld.param.u32 	%r3, [SetPathWeight_param_3];
	ld.param.u32 	%r2, [SetPathWeight_param_4];
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %tid.x;
	mad.lo.s32 	%r1, %r4, %r5, %r6;
	mul.lo.s32 	%r7, %r2, %r3;
	setp.ge.s32	%p1, %r1, %r7;
	@%p1 bra 	BB13_2;

	cvta.to.global.u64 	%rd4, %rd1;
	cvta.to.global.u64 	%rd5, %rd3;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd4, %rd6;
	add.s32 	%r8, %r2, -1;
	rem.s32 	%r9, %r1, %r2;
	setp.eq.s32	%p2, %r9, %r8;
	neg.s32 	%r10, %r2;
	selp.b32	%r11, %r10, 0, %p2;
	add.s32 	%r12, %r1, %r11;
	add.s32 	%r13, %r12, 1;
	mul.wide.s32 	%rd8, %r13, 4;
	add.s64 	%rd9, %rd4, %rd8;
	ld.global.u32 	%r14, [%rd7];
	ld.global.u32 	%r15, [%rd9];
	mad.lo.s32 	%r16, %r14, %r2, %r15;
	mul.wide.s32 	%rd10, %r16, 4;
	add.s64 	%rd11, %rd5, %rd10;
	ld.global.u32 	%r17, [%rd11];
	cvta.to.global.u64 	%rd12, %rd2;
	add.s64 	%rd13, %rd12, %rd6;
	st.global.u32 	[%rd13], %r17;

BB13_2:
	ret;
}

	// .globl	FillRanksFromDistance
.visible .entry FillRanksFromDistance(
	.param .u64 FillRanksFromDistance_param_0,
	.param .u64 FillRanksFromDistance_param_1,
	.param .u32 FillRanksFromDistance_param_2,
	.param .u32 FillRanksFromDistance_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [FillRanksFromDistance_param_0];
	ld.param.u64 	%rd2, [FillRanksFromDistance_param_1];
	ld.param.u32 	%r3, [FillRanksFromDistance_param_2];
	ld.param.u32 	%r2, [FillRanksFromDistance_param_3];
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %tid.x;
	mad.lo.s32 	%r1, %r5, %r4, %r6;
	setp.ge.s32	%p1, %r1, %r3;
	@%p1 bra 	BB14_2;

	cvta.to.global.u64 	%rd3, %rd1;
	add.s32 	%r7, %r1, 1;
	mad.lo.s32 	%r8, %r7, %r2, -1;
	mul.wide.s32 	%rd4, %r8, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u32 	%r9, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.u32 	[%rd8], %r9;

BB14_2:
	ret;
}

	// .globl	SetWhoBecomeMaster
.visible .entry SetWhoBecomeMaster(
	.param .u64 SetWhoBecomeMaster_param_0,
	.param .u64 SetWhoBecomeMaster_param_1,
	.param .u64 SetWhoBecomeMaster_param_2,
	.param .u32 SetWhoBecomeMaster_param_3
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<12>;
	.reg .b64 	%rd<12>;


	ld.param.u64 	%rd2, [SetWhoBecomeMaster_param_0];
	ld.param.u64 	%rd3, [SetWhoBecomeMaster_param_1];
	ld.param.u64 	%rd4, [SetWhoBecomeMaster_param_2];
	ld.param.u32 	%r2, [SetWhoBecomeMaster_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r5;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB15_4;

	cvta.to.global.u64 	%rd5, %rd3;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	add.s32 	%r6, %r2, -1;
	sub.s32 	%r7, %r6, %r1;
	cvta.to.global.u64 	%rd8, %rd4;
	mul.wide.s32 	%rd9, %r7, 4;
	add.s64 	%rd10, %rd8, %rd9;
	ld.global.u32 	%r8, [%rd10];
	ld.global.u32 	%r9, [%rd7];
	setp.lt.s32	%p2, %r9, %r8;
	cvta.to.global.u64 	%rd11, %rd2;
	add.s64 	%rd1, %rd11, %rd6;
	@%p2 bra 	BB15_3;
	bra.uni 	BB15_2;

BB15_3:
	mov.u32 	%r11, 1;
	st.global.u32 	[%rd1], %r11;
	bra.uni 	BB15_4;

BB15_2:
	mov.u32 	%r10, 0;
	st.global.u32 	[%rd1], %r10;

BB15_4:
	ret;
}

	// .globl	AddNewMasters
.visible .entry AddNewMasters(
	.param .u32 AddNewMasters_param_0,
	.param .u64 AddNewMasters_param_1,
	.param .u64 AddNewMasters_param_2,
	.param .u64 AddNewMasters_param_3,
	.param .u64 AddNewMasters_param_4,
	.param .u64 AddNewMasters_param_5,
	.param .u32 AddNewMasters_param_6,
	.param .u32 AddNewMasters_param_7
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<20>;


	ld.param.u32 	%r2, [AddNewMasters_param_0];
	ld.param.u64 	%rd1, [AddNewMasters_param_1];
	ld.param.u64 	%rd2, [AddNewMasters_param_2];
	ld.param.u64 	%rd3, [AddNewMasters_param_3];
	ld.param.u64 	%rd4, [AddNewMasters_param_4];
	ld.param.u64 	%rd5, [AddNewMasters_param_5];
	ld.param.u32 	%r3, [AddNewMasters_param_6];
	ld.param.u32 	%r4, [AddNewMasters_param_7];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	mul.lo.s32 	%r8, %r4, %r2;
	setp.ge.s32	%p1, %r1, %r8;
	@%p1 bra 	BB16_2;

	cvta.to.global.u64 	%rd6, %rd4;
	div.s32 	%r9, %r1, %r4;
	mul.wide.s32 	%rd7, %r9, 4;
	add.s64 	%rd8, %rd6, %rd7;
	sub.s32 	%r10, %r3, %r2;
	add.s32 	%r11, %r9, %r10;
	ld.global.u32 	%r12, [%rd8];
	rem.s32 	%r13, %r1, %r4;
	mad.lo.s32 	%r14, %r12, %r4, %r13;
	cvta.to.global.u64 	%rd9, %rd1;
	mul.wide.s32 	%rd10, %r14, 4;
	add.s64 	%rd11, %rd9, %rd10;
	ld.global.u32 	%r15, [%rd11];
	mad.lo.s32 	%r16, %r11, %r4, %r13;
	cvta.to.global.u64 	%rd12, %rd2;
	mul.wide.s32 	%rd13, %r16, 4;
	add.s64 	%rd14, %rd12, %rd13;
	st.global.u32 	[%rd14], %r15;
	cvta.to.global.u64 	%rd15, %rd3;
	add.s64 	%rd16, %rd15, %rd7;
	ld.global.u32 	%r17, [%rd16];
	cvta.to.global.u64 	%rd17, %rd5;
	mul.wide.s32 	%rd18, %r11, 4;
	add.s64 	%rd19, %rd17, %rd18;
	st.global.u32 	[%rd19], %r17;

BB16_2:
	ret;
}

	// .globl	CopyFromTo
.visible .entry CopyFromTo(
	.param .u64 CopyFromTo_param_0,
	.param .u32 CopyFromTo_param_1,
	.param .u64 CopyFromTo_param_2,
	.param .u32 CopyFromTo_param_3,
	.param .u32 CopyFromTo_param_4,
	.param .u32 CopyFromTo_param_5
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<13>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [CopyFromTo_param_0];
	ld.param.u32 	%r2, [CopyFromTo_param_1];
	ld.param.u64 	%rd2, [CopyFromTo_param_2];
	ld.param.u32 	%r3, [CopyFromTo_param_3];
	ld.param.u32 	%r4, [CopyFromTo_param_4];
	ld.param.u32 	%r5, [CopyFromTo_param_5];
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r7, %r6, %r8;
	mul.lo.s32 	%r9, %r5, %r4;
	setp.ge.s32	%p1, %r1, %r9;
	@%p1 bra 	BB17_2;

	cvta.to.global.u64 	%rd3, %rd1;
	add.s32 	%r10, %r1, %r2;
	mul.wide.s32 	%rd4, %r10, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u32 	%r11, [%rd5];
	add.s32 	%r12, %r1, %r3;
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r12, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.u32 	[%rd8], %r11;

BB17_2:
	ret;
}

	// .globl	CopyLocalBestsToCrossover
.visible .entry CopyLocalBestsToCrossover(
	.param .u64 CopyLocalBestsToCrossover_param_0,
	.param .u64 CopyLocalBestsToCrossover_param_1,
	.param .u32 CopyLocalBestsToCrossover_param_2,
	.param .u32 CopyLocalBestsToCrossover_param_3,
	.param .u64 CopyLocalBestsToCrossover_param_4,
	.param .u32 CopyLocalBestsToCrossover_param_5,
	.param .u32 CopyLocalBestsToCrossover_param_6
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd1, [CopyLocalBestsToCrossover_param_0];
	ld.param.u64 	%rd2, [CopyLocalBestsToCrossover_param_1];
	ld.param.u32 	%r5, [CopyLocalBestsToCrossover_param_2];
	ld.param.u32 	%r2, [CopyLocalBestsToCrossover_param_3];
	ld.param.u64 	%rd3, [CopyLocalBestsToCrossover_param_4];
	ld.param.u32 	%r3, [CopyLocalBestsToCrossover_param_5];
	ld.param.u32 	%r4, [CopyLocalBestsToCrossover_param_6];
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r7, %r6, %r8;
	mul.lo.s32 	%r9, %r4, %r5;
	setp.ge.s32	%p1, %r1, %r9;
	@%p1 bra 	BB18_2;

	cvta.to.global.u64 	%rd4, %rd2;
	div.s32 	%r10, %r1, %r4;
	add.s32 	%r11, %r10, %r2;
	mul.wide.s32 	%rd5, %r11, 4;
	add.s64 	%rd6, %rd4, %rd5;
	add.s32 	%r12, %r10, %r3;
	ld.global.u32 	%r13, [%rd6];
	rem.s32 	%r14, %r1, %r4;
	mad.lo.s32 	%r15, %r13, %r4, %r14;
	cvta.to.global.u64 	%rd7, %rd1;
	mul.wide.s32 	%rd8, %r15, 4;
	add.s64 	%rd9, %rd7, %rd8;
	ld.global.u32 	%r16, [%rd9];
	mad.lo.s32 	%r17, %r12, %r4, %r14;
	cvta.to.global.u64 	%rd10, %rd3;
	mul.wide.s32 	%rd11, %r17, 4;
	add.s64 	%rd12, %rd10, %rd11;
	st.global.u32 	[%rd12], %r16;

BB18_2:
	ret;
}

	// .globl	GetValue
.visible .entry GetValue(
	.param .u64 GetValue_param_0,
	.param .u64 GetValue_param_1,
	.param .u32 GetValue_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [GetValue_param_0];
	ld.param.u64 	%rd2, [GetValue_param_1];
	ld.param.u32 	%r1, [GetValue_param_2];
	mov.u32 	%r2, %tid.x;
	setp.ne.s32	%p1, %r2, 0;
	@%p1 bra 	BB19_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ldu.global.u32 	%r3, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	st.global.u32 	[%rd6], %r3;

BB19_2:
	ret;
}


